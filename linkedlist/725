# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def splitListToParts(self, head: Optional[ListNode], k: int) -> List[Optional[ListNode]]:
        l=0
        temp=head
        while temp:
            l+=1
            temp=temp.next
        q,r=divmod(l,k) #q,r=3,1 where l=10
        ans,cur=[],head
        for i in range(k):
            dummy=new=ListNode(0)
            for j in range(q+(i<r)):
                if cur:
                    new.next=new=ListNode(cur.val)
                    cur=cur.next
            ans.append(dummy.next)
        return ans